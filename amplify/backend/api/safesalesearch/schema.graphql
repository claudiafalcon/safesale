type Property @model @searchable @auth(
  rules:[
    {allow: groups, groups:["UserGroupSaleForce"]}
    {allow: private, operations:[read]},
    {allow: public, operations:[read], provider:iam}
  ]
)
{
  id: ID!
  nombre: String!
  tipo: String !
  propietario: String!
  location:Location!
  descripcion: String
  caracteristicas: String 
  precio: String
  recamaras: Int
  wc: Int
  baths: Int
  asesor: String
  construccion_m2: Int
  amenidades: String
  estacionamientos: Int
  localidad: String
  inventario: Int
  propertyGeohash: String
  terreno_m2: Int
  direccion: String
  creacion: String
  propertyHashKey: String
  cp: String
  edad: Int
  pais: String
  entidad: String
  status: String
  video: Boolean
  galery: [S3Object]
  favs: [UserFavs] @connection(name:"PropertyFav")
} 
type S3Object {
  bucket: String!
  region: String!
  key: String!
 
}

type Location {
  lat: Float!
  lon: Float!
}

type Query {
 nearbyProperties(
   location: LocationInput!, 
   m: Int, 
   limit: Int, 
   nextToken: String
 ): ModelPropertyPointConnection 
  @auth(rules: [
    {allow: groups, groups:["UserGroupSaleForce"]}
    {allow: private},
      { allow: public, provider: iam }
    ]),
    
  searchProperties(
   criteria: CriteriaInput!, 
   limit: Int, 
   nextToken: String
 ): ModelPropertyPointConnection 
  @auth(rules: [
    {allow: groups, groups:["UserGroupSaleForce"]}
    {allow: private},
    { allow: public, provider: iam }
    ])
}
input LocationInput {
  lat: Float!
  lon: Float!
}
type ModelPropertyPointConnection   @aws_iam @aws_cognito_user_pools{
 items: [Property]
 total: Int
 nextToken: String
}



input CriteriaInput {
  searchCriteria: String!
  amenidades: String
  tipo: String
  recamaras: Int
  estacionamientos: Int
  baths: Int
  terreno_m2: Int
  construccion_m2: Int
  precio_from: Int
  precio_to: Int
}

type Alert @model @searchable
  @auth(rules: [{ allow: owner }])  {
  id: ID!
  searchCriteria: String!
  amenidades: String
  tipo: String
  recamaras: Int
  estacionamientos: Int
  baths: Int
  terreno_m2: Int
  construccion_m2: Int
  precio_from: Int
  precio_to: Int
  user: User @connection(name:"UserAlert")
}


type User @model @searchable
  @auth(rules: [{ allow: owner }])
{
  id: ID!
  alerts : [Alert]  @connection (name: "UserAlert")
  favs: [UserFavs] @connection(name:"UserFav")
} 


type UserFavs @model @searchable  (queries:null)
  @auth(rules: [{ allow: owner }]){
    id: ID!
    property: Property @connection(name:"PropertyFav")
    user: User @connection(name:"UserFav")

  }